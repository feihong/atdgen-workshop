type datetime = string wrap <ocaml module="Wrap.Datetime">

type ('a, 'b) result <ocaml predef module="Belt.Result" t="t"> = [
  | Ok of 'a
  | Error of 'b
] <ocaml repr="classic">

type error = [
  | NotAuthorized of string
  | NetworkError of string
  | UnknownError of string
  | ParseError of string
]

type eventOutput = (events, error) result

type event = {
  externalId: string wrap <ocaml module="Wrap.ExternalId">;
  name: string;
  description: string;
  url: string;
  start: datetime;
  end_ <json name="end">: datetime nullable;
  isSeries: bool;
  venue: venue;
  organizer: organizer;
}

type events = event list

type venue = {
  name: string nullable;
  address: address;
}

type organizer = {
  name: string;
  url: string;
  description: string nullable;
}

type address = {
  address1: string nullable;
  address2: string nullable;
  city: string nullable;
  region: string nullable;
  postalCode: string nullable;
}
